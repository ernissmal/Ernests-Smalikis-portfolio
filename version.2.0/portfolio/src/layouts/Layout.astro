---
export interface Props {
	title: string;
	description?: string;
}

const { 
	title,
	description = "Software Engineer specializing in web development, iOS development, and Python programming. View my portfolio, projects, and professional journey."
} = Astro.props;

// Base URL for canonical and OG tags
const baseUrl = "https://ernests-smalikis.com";
const currentUrl = new URL(Astro.url.pathname, baseUrl).toString();

// Cache control headers
Astro.response.headers.set('Cache-Control', 'public, max-age=604800, immutable');
---

<!DOCTYPE html>
<html lang="en" class="light">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		
		<!-- Security headers -->
		<meta http-equiv="X-Content-Type-Options" content="nosniff" />
		<meta http-equiv="X-Frame-Options" content="SAMEORIGIN" />
		<meta http-equiv="X-XSS-Protection" content="1; mode=block" />
		<meta http-equiv="Content-Security-Policy" content="default-src 'self'; img-src 'self' data: https:; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; script-src 'self' 'unsafe-inline'" />
		
		<!-- Primary Meta Tags -->
		<title>{title}</title>
		<meta name="title" content={title} />
		<meta name="description" content={description} />
		<meta name="keywords" content="software engineer, web developer, iOS developer, Python programmer, Latvia developer, portfolio, systems architect, automation expert" />
		<link rel="canonical" href={currentUrl} />
		<meta name="author" content="Ernests Smalikis" />
		<meta name="robots" content="index, follow" />
		
		<!-- Open Graph / Facebook -->
		<meta property="og:type" content="website" />
		<meta property="og:url" content={currentUrl} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:image" content={`${baseUrl}/og-image.jpg`} />
		
		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content={currentUrl} />
		<meta property="twitter:title" content={title} />
		<meta property="twitter:description" content={description} />
		<meta property="twitter:image" content={`${baseUrl}/og-image.jpg`} />
		
		<!-- Favicon -->
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
		<link rel="manifest" href="/site.webmanifest" />
		
		<!-- Resource Hints -->
		<link rel="dns-prefetch" href="https://fonts.googleapis.com" />
		<link rel="dns-prefetch" href="https://fonts.gstatic.com" />
		<link rel="preconnect" href="https://fonts.googleapis.com" crossorigin />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		
		<!-- Font Loading Optimization -->
		<link rel="preload" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" as="style" />
		<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" media="print" onload="this.media='all'" />
		<noscript>
			<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" />
		</noscript>
		
		<!-- Styles -->
		<link rel="stylesheet" href="/global.css" />
		
		<!-- Generator -->
		<meta name="generator" content={Astro.generator} />
		
		<!-- JSON-LD Structured Data -->
		<script type="application/ld+json">
			{
				"@context": "https://schema.org",
				"@type": "Person",
				"name": "Ernests Smalikis",
				"url": "{baseUrl}",
				"sameAs": [
					"https://twitter.com/ESmalikis",
					"https://github.com/ernissmal",
					"https://www.instagram.com/erenesto_smalikis",
					"https://www.youtube.com/@ESmalikis"
				],
				"jobTitle": "Software Engineer",
				"description": "Passionate software engineer specializing in web development, iOS applications, and systems architecture",
				"knowsAbout": [
					"Web Development",
					"iOS Development",
					"Python Programming",
					"Systems Architecture",
					"Automation",
					"Software Engineering"
				],
				"alumniOf": {
					"@type": "CollegeOrUniversity",
					"name": "Valmieras tehnikums"
				},
				"workLocation": {
					"@type": "Place",
					"address": {
						"@type": "PostalAddress",
						"addressLocality": "Valmiera",
						"addressRegion": "Vidzeme",
						"addressCountry": "Latvia"
					}
				}
			}
		</script>
	</head>
	<body>
		<div class="page-container">
			<div class="content">
				<slot />
			</div>

			<!-- Simple, unobtrusive CTA -->
			<a href="/projects" class="cta-button">
				<button>
					<span>View Projects</span>
				</button>
			</a>
			
			<!-- Theme toggle button -->
			<button id="theme-toggle" class="theme-toggle" aria-label="Toggle dark mode">
				<svg xmlns="http://www.w3.org/2000/svg" class="sun-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="5"></circle><line x1="12" y1="1" x2="12" y2="3"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line><line x1="1" y1="12" x2="3" y2="12"></line><line x1="21" y1="12" x2="23" y2="12"></line><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line></svg>
				<svg xmlns="http://www.w3.org/2000/svg" class="moon-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path></svg>
			</button>
		</div>
		
		<script>
			// Check for system preference and set initial theme
			function setThemeBasedOnPreference() {
				const prefersDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;
				const html = document.documentElement;
				
				if (prefersDarkMode) {
					html.classList.remove('light');
					html.classList.add('dark');
				} else {
					html.classList.remove('dark');
					html.classList.add('light');
				}
			}
			
			// Run initially
			setThemeBasedOnPreference();
			
			// Listen for preference changes
			window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', setThemeBasedOnPreference);
			
			// Manual toggle functionality
			document.addEventListener('DOMContentLoaded', () => {
				const themeToggle = document.getElementById('theme-toggle');
				
				if (themeToggle) {
					themeToggle.addEventListener('click', () => {
						const html = document.documentElement;
						if (html.classList.contains('dark')) {
							html.classList.remove('dark');
							html.classList.add('light');
							localStorage.setItem('theme', 'light');
						} else {
							html.classList.remove('light');
							html.classList.add('dark');
							localStorage.setItem('theme', 'dark');
						}
					});
				}
				
				// Check for saved preference
				const savedTheme = localStorage.getItem('theme');
				if (savedTheme) {
					const html = document.documentElement;
					html.classList.remove('light', 'dark');
					html.classList.add(savedTheme);
				}
			});
		</script>
	</body>
</html>

<style is:global>
	:root {
		--primary: #2563eb;
		--primary-dark: #1d4ed8;
		--primary-light: #3b82f6;
		--secondary: #64748b;
		--secondary-dark: #475569;
		--secondary-light: #94a3b8;
		--accent: #f43f5e;
		--accent-dark: #e11d48;
		--accent-light: #fb7185;
		--background: #f8fafc;
		--text: #1e293b;
		--text-light: #64748b;
		--border: #e2e8f0;
		--card: #ffffff;
		--shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.05);
		--shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
		--radius-sm: 0.25rem;
		--radius-md: 0.375rem;
		--radius-lg: 0.5rem;
	}
	
	html.dark {
		--primary: #3b82f6;
		--primary-dark: #2563eb;
		--primary-light: #60a5fa;
		--secondary: #94a3b8;
		--secondary-dark: #64748b;
		--secondary-light: #cbd5e1;
		--accent: #fb7185;
		--accent-dark: #f43f5e;
		--accent-light: #fda4af;
		--background: #0f172a;
		--text: #e2e8f0;
		--text-light: #94a3b8;
		--border: #334155;
		--card: #1e293b;
		--shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.3);
		--shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.3), 0 2px 4px -2px rgba(0, 0, 0, 0.3);
	}

	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}

	html {
		scroll-behavior: smooth;
		transition: background-color 0.3s ease;
	}

	body {
		background-color: var(--background);
		color: var(--text);
		font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
		min-height: 100vh;
		line-height: 1.6;
		transition: background-color 0.3s ease, color 0.3s ease;
	}

	.page-container {
		max-width: 1200px;
		margin: 0 auto;
		padding: 0 20px;
		position: relative;
	}

	.content {
		padding-top: 80px;
		padding-bottom: 80px;
	}

	h1, h2, h3, h4, h5, h6 {
		font-weight: 600;
		line-height: 1.3;
		margin-bottom: 1rem;
		color: var(--text);
		transition: color 0.3s ease;
	}
	
	/* Theme toggle styling */
	.theme-toggle {
		position: fixed;
		bottom: 90px;
		right: 30px;
		width: 48px;
		height: 48px;
		border-radius: 50%;
		background-color: var(--primary);
		color: white;
		border: none;
		display: flex;
		align-items: center;
		justify-content: center;
		cursor: pointer;
		z-index: 100;
		box-shadow: var(--shadow-md);
		transition: background-color 0.3s ease, transform 0.2s ease;
	}
	
	.theme-toggle:hover {
		transform: scale(1.05);
		background-color: var(--primary-dark);
	}
	
	.theme-toggle:active {
		transform: scale(0.95);
	}
	
	.sun-icon, .moon-icon {
		position: absolute;
		transition: opacity 0.3s ease, transform 0.3s ease;
	}
	
	html.light .sun-icon {
		opacity: 1;
		transform: rotate(0deg);
	}
	
	html.light .moon-icon {
		opacity: 0;
		transform: rotate(90deg);
	}
	
	html.dark .sun-icon {
		opacity: 0;
		transform: rotate(-90deg);
	}
	
	html.dark .moon-icon {
		opacity: 1;
		transform: rotate(0deg);
	}

	h1 {
		font-size: 2.25rem;
		letter-spacing: -0.025em;
	}

	h2 {
		font-size: 1.75rem;
		letter-spacing: -0.025em;
	}

	p {
		margin-bottom: 1.5rem;
		line-height: 1.6;
		color: var(--text-light);
	}

	a {
		color: var(--primary);
		text-decoration: none;
		transition: color 0.2s;
	}

	a:hover {
		color: var(--primary-dark);
	}

	/* Modern card style */
	.card {
		background-color: var(--card);
		border-radius: var(--radius-lg);
		padding: 24px;
		box-shadow: var(--shadow-sm);
		border: 1px solid var(--border);
		margin-bottom: 24px;
		transition: box-shadow 0.2s ease;
	}

	.card:hover {
		box-shadow: var(--shadow-md);
	}

	/* Clean button style */
	button {
		background-color: var(--primary);
		color: white;
		border: none;
		padding: 10px 16px;
		border-radius: var(--radius-md);
		font-weight: 500;
		cursor: pointer;
		transition: background-color 0.2s;
	}

	button:hover {
		background-color: var(--primary-dark);
	}

	.cta-button {
		position: fixed;
		bottom: 30px;
		right: 30px;
		z-index: 50;
	}

	.cta-button button {
		padding: 12px 20px;
		font-size: 0.9rem;
		font-weight: 600;
		box-shadow: var(--shadow-sm);
		transition: transform 0.2s ease, box-shadow 0.2s ease, background-color 0.3s ease;
	}

	.cta-button button:hover {
		transform: translateY(-2px);
		box-shadow: var(--shadow-md);
	}

	@media (max-width: 768px) {
		h1 {
			font-size: 1.75rem;
		}
		
		.content {
			padding-top: 60px;
			padding-bottom: 60px;
		}
		
		.theme-toggle {
			bottom: 30px;
			right: 30px;
		}
		
		.cta-button {
			display: none;
		}
	}
</style>